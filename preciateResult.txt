第1步
符号栈:<程序> # 
输入栈:struct id { type * id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<程序>-><结构体定义><函数定义>

第2步
符号栈:<结构体定义> <函数定义> # 
输入栈:struct id { type * id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<结构体定义>->structid{<结构体成员列表>};

第3步
符号栈:struct id { <结构体成员列表> } ; <函数定义> # 
输入栈:struct id { type * id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第4步
符号栈:id { <结构体成员列表> } ; <函数定义> # 
输入栈:id { type * id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第5步
符号栈:{ <结构体成员列表> } ; <函数定义> # 
输入栈:{ type * id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第6步
符号栈:<结构体成员列表> } ; <函数定义> # 
输入栈:type * id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<结构体成员列表>-><类型>id;<结构体成员列表>

第7步
符号栈:<类型> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:type * id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<类型>->type<取地址>

第8步
符号栈:type <取地址> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:type * id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第9步
符号栈:<取地址> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:* id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<取地址>-><星号闭包>

第10步
符号栈:<星号闭包> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:* id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<星号闭包>-><星号><星号闭包>

第11步
符号栈:<星号> <星号闭包> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:* id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<星号>->*

第12步
符号栈:* <星号闭包> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:* id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第13步
符号栈:<星号闭包> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<星号闭包>->$

第14步
符号栈:id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第15步
符号栈:; <结构体成员列表> } ; <函数定义> # 
输入栈:; type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第16步
符号栈:<结构体成员列表> } ; <函数定义> # 
输入栈:type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<结构体成员列表>-><类型>id;<结构体成员列表>

第17步
符号栈:<类型> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<类型>->type<取地址>

第18步
符号栈:type <取地址> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:type id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第19步
符号栈:<取地址> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<取地址>-><星号闭包>

第20步
符号栈:<星号闭包> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<星号闭包>->$

第21步
符号栈:id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第22步
符号栈:; <结构体成员列表> } ; <函数定义> # 
输入栈:; type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第23步
符号栈:<结构体成员列表> } ; <函数定义> # 
输入栈:type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<结构体成员列表>-><类型>id;<结构体成员列表>

第24步
符号栈:<类型> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<类型>->type<取地址>

第25步
符号栈:type <取地址> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:type id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第26步
符号栈:<取地址> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<取地址>-><星号闭包>

第27步
符号栈:<星号闭包> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<星号闭包>->$

第28步
符号栈:id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第29步
符号栈:; <结构体成员列表> } ; <函数定义> # 
输入栈:; type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第30步
符号栈:<结构体成员列表> } ; <函数定义> # 
输入栈:type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<结构体成员列表>-><类型>id;<结构体成员列表>

第31步
符号栈:<类型> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<类型>->type<取地址>

第32步
符号栈:type <取地址> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:type id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第33步
符号栈:<取地址> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<取地址>-><星号闭包>

第34步
符号栈:<星号闭包> id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<星号闭包>->$

第35步
符号栈:id ; <结构体成员列表> } ; <函数定义> # 
输入栈:id ; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第36步
符号栈:; <结构体成员列表> } ; <函数定义> # 
输入栈:; } ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第37步
符号栈:<结构体成员列表> } ; <函数定义> # 
输入栈:} ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<结构体成员列表>->$

第38步
符号栈:} ; <函数定义> # 
输入栈:} ; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第39步
符号栈:; <函数定义> # 
输入栈:; type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第40步
符号栈:<函数定义> # 
输入栈:type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<函数定义>-><修饰词闭包><类型><变量>(<参数声明>){<函数块>}

第41步
符号栈:<修饰词闭包> <类型> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<修饰词闭包>->$

第42步
符号栈:<类型> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<类型>->type<取地址>

第43步
符号栈:type <取地址> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:type id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第44步
符号栈:<取地址> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<取地址>-><星号闭包>

第45步
符号栈:<星号闭包> <变量> ( <参数声明> ) { <函数块> } # 
输入栈:id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<星号闭包>->$

第46步
符号栈:<变量> ( <参数声明> ) { <函数块> } # 
输入栈:id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量>-><标志符><数组或结构体>

第47步
符号栈:<标志符> <数组或结构体> ( <参数声明> ) { <函数块> } # 
输入栈:id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<标志符>->id

第48步
符号栈:id <数组或结构体> ( <参数声明> ) { <函数块> } # 
输入栈:id ( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第49步
符号栈:<数组或结构体> ( <参数声明> ) { <函数块> } # 
输入栈:( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组或结构体>-><数组下标>

第50步
符号栈:<数组下标> ( <参数声明> ) { <函数块> } # 
输入栈:( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组下标>->$

第51步
符号栈:( <参数声明> ) { <函数块> } # 
输入栈:( ) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第52步
符号栈:<参数声明> ) { <函数块> } # 
输入栈:) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<参数声明>->$

第53步
符号栈:) { <函数块> } # 
输入栈:) { type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第54步
符号栈:{ <函数块> } # 
输入栈:{ type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第55步
符号栈:<函数块> } # 
输入栈:type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<函数块>-><声明语句闭包><函数块闭包>

第56步
符号栈:<声明语句闭包> <函数块闭包> } # 
输入栈:type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<声明语句闭包>-><声明语句><声明语句闭包>

第57步
符号栈:<声明语句> <声明语句闭包> <函数块闭包> } # 
输入栈:type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<声明语句>-><声明>;

第58步
符号栈:<声明> ; <声明语句闭包> <函数块闭包> } # 
输入栈:type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<声明>-><修饰词闭包><类型><变量><变量闭包><赋初值>

第59步
符号栈:<修饰词闭包> <类型> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<修饰词闭包>->$

第60步
符号栈:<类型> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<类型>->type<取地址>

第61步
符号栈:type <取地址> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:type id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第62步
符号栈:<取地址> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<取地址>-><星号闭包>

第63步
符号栈:<星号闭包> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<星号闭包>->$

第64步
符号栈:<变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量>-><标志符><数组或结构体>

第65步
符号栈:<标志符> <数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<标志符>->id

第66步
符号栈:id <数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id , id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第67步
符号栈:<数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:, id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组或结构体>-><数组下标>

第68步
符号栈:<数组下标> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:, id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组下标>->$

第69步
符号栈:<变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:, id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量闭包>->,<变量><变量闭包>

第70步
符号栈:, <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:, id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第71步
符号栈:<变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量>-><标志符><数组或结构体>

第72步
符号栈:<标志符> <数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<标志符>->id

第73步
符号栈:id <数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id , id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第74步
符号栈:<数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:, id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组或结构体>-><数组下标>

第75步
符号栈:<数组下标> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:, id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组下标>->$

第76步
符号栈:<变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:, id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量闭包>->,<变量><变量闭包>

第77步
符号栈:, <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:, id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第78步
符号栈:<变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量>-><标志符><数组或结构体>

第79步
符号栈:<标志符> <数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<标志符>->id

第80步
符号栈:id <数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id = digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第81步
符号栈:<数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组或结构体>-><数组下标>

第82步
符号栈:<数组下标> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组下标>->$

第83步
符号栈:<变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量闭包>->$

第84步
符号栈:<赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<赋初值>->=<右值>

第85步
符号栈:= <右值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第86步
符号栈:<右值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<右值>-><表达式>

第87步
符号栈:<表达式> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<表达式>-><因子><项>

第88步
符号栈:<因子> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因子>-><因式><因式递归>

第89步
符号栈:<因式> <因式递归> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式>-><数字>

第90步
符号栈:<数字> <因式递归> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第91步
符号栈:digit <因式递归> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第92步
符号栈:<因式递归> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式递归>->$

第93步
符号栈:<项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<项>->$

第94步
符号栈:; <声明语句闭包> <函数块闭包> } # 
输入栈:; type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第95步
符号栈:<声明语句闭包> <函数块闭包> } # 
输入栈:type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<声明语句闭包>-><声明语句><声明语句闭包>

第96步
符号栈:<声明语句> <声明语句闭包> <函数块闭包> } # 
输入栈:type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<声明语句>-><声明>;

第97步
符号栈:<声明> ; <声明语句闭包> <函数块闭包> } # 
输入栈:type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<声明>-><修饰词闭包><类型><变量><变量闭包><赋初值>

第98步
符号栈:<修饰词闭包> <类型> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<修饰词闭包>->$

第99步
符号栈:<类型> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<类型>->type<取地址>

第100步
符号栈:type <取地址> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:type id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第101步
符号栈:<取地址> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<取地址>-><星号闭包>

第102步
符号栈:<星号闭包> <变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<星号闭包>->$

第103步
符号栈:<变量> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量>-><标志符><数组或结构体>

第104步
符号栈:<标志符> <数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<标志符>->id

第105步
符号栈:id <数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:id = digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第106步
符号栈:<数组或结构体> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组或结构体>-><数组下标>

第107步
符号栈:<数组下标> <变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组下标>->$

第108步
符号栈:<变量闭包> <赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量闭包>->$

第109步
符号栈:<赋初值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<赋初值>->=<右值>

第110步
符号栈:= <右值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:= digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第111步
符号栈:<右值> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<右值>-><表达式>

第112步
符号栈:<表达式> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<表达式>-><因子><项>

第113步
符号栈:<因子> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因子>-><因式><因式递归>

第114步
符号栈:<因式> <因式递归> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式>-><数字>

第115步
符号栈:<数字> <因式递归> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第116步
符号栈:digit <因式递归> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:digit ; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第117步
符号栈:<因式递归> <项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式递归>->$

第118步
符号栈:<项> ; <声明语句闭包> <函数块闭包> } # 
输入栈:; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<项>->$

第119步
符号栈:; <声明语句闭包> <函数块闭包> } # 
输入栈:; id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第120步
符号栈:<声明语句闭包> <函数块闭包> } # 
输入栈:id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<声明语句闭包>->$

第121步
符号栈:<函数块闭包> } # 
输入栈:id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<函数块闭包>-><赋值函数><函数块闭包>

第122步
符号栈:<赋值函数> <函数块闭包> } # 
输入栈:id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<赋值函数>-><变量><赋值或函数调用>

第123步
符号栈:<变量> <赋值或函数调用> <函数块闭包> } # 
输入栈:id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量>-><标志符><数组或结构体>

第124步
符号栈:<标志符> <数组或结构体> <赋值或函数调用> <函数块闭包> } # 
输入栈:id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<标志符>->id

第125步
符号栈:id <数组或结构体> <赋值或函数调用> <函数块闭包> } # 
输入栈:id id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第126步
符号栈:<数组或结构体> <赋值或函数调用> <函数块闭包> } # 
输入栈:id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组或结构体>-><结构体变量>

第127步
符号栈:<结构体变量> <赋值或函数调用> <函数块闭包> } # 
输入栈:id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<结构体变量>->id[digit]

第128步
符号栈:id [ digit ] <赋值或函数调用> <函数块闭包> } # 
输入栈:id [ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第129步
符号栈:[ digit ] <赋值或函数调用> <函数块闭包> } # 
输入栈:[ digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第130步
符号栈:digit ] <赋值或函数调用> <函数块闭包> } # 
输入栈:digit ] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第131步
符号栈:] <赋值或函数调用> <函数块闭包> } # 
输入栈:] = { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第132步
符号栈:<赋值或函数调用> <函数块闭包> } # 
输入栈:= { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<赋值或函数调用>->=<右值>;

第133步
符号栈:= <右值> ; <函数块闭包> } # 
输入栈:= { { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第134步
符号栈:<右值> ; <函数块闭包> } # 
输入栈:{ { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<右值>->{{<多个数据>},{<多个数据>}}

第135步
符号栈:{ { <多个数据> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:{ { string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第136步
符号栈:{ <多个数据> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:{ string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第137步
符号栈:<多个数据> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<多个数据>-><字符串><数字闭包>

第138步
符号栈:<字符串> <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<字符串>->string

第139步
符号栈:string <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:string , digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第140步
符号栈:<数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:, digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字闭包>->,<数字><数字闭包>

第141步
符号栈:, <数字> <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:, digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第142步
符号栈:<数字> <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第143步
符号栈:digit <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:digit , digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第144步
符号栈:<数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:, digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字闭包>->,<数字><数字闭包>

第145步
符号栈:, <数字> <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:, digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第146步
符号栈:<数字> <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第147步
符号栈:digit <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:digit , digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第148步
符号栈:<数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:, digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字闭包>->,<数字><数字闭包>

第149步
符号栈:, <数字> <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:, digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第150步
符号栈:<数字> <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第151步
符号栈:digit <数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:digit } , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第152步
符号栈:<数字闭包> } , { <多个数据> } } ; <函数块闭包> } # 
输入栈:} , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字闭包>->$

第153步
符号栈:} , { <多个数据> } } ; <函数块闭包> } # 
输入栈:} , { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第154步
符号栈:, { <多个数据> } } ; <函数块闭包> } # 
输入栈:, { string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第155步
符号栈:{ <多个数据> } } ; <函数块闭包> } # 
输入栈:{ string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第156步
符号栈:<多个数据> } } ; <函数块闭包> } # 
输入栈:string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<多个数据>-><字符串><数字闭包>

第157步
符号栈:<字符串> <数字闭包> } } ; <函数块闭包> } # 
输入栈:string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<字符串>->string

第158步
符号栈:string <数字闭包> } } ; <函数块闭包> } # 
输入栈:string , digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第159步
符号栈:<数字闭包> } } ; <函数块闭包> } # 
输入栈:, digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字闭包>->,<数字><数字闭包>

第160步
符号栈:, <数字> <数字闭包> } } ; <函数块闭包> } # 
输入栈:, digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第161步
符号栈:<数字> <数字闭包> } } ; <函数块闭包> } # 
输入栈:digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第162步
符号栈:digit <数字闭包> } } ; <函数块闭包> } # 
输入栈:digit , digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第163步
符号栈:<数字闭包> } } ; <函数块闭包> } # 
输入栈:, digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字闭包>->,<数字><数字闭包>

第164步
符号栈:, <数字> <数字闭包> } } ; <函数块闭包> } # 
输入栈:, digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第165步
符号栈:<数字> <数字闭包> } } ; <函数块闭包> } # 
输入栈:digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第166步
符号栈:digit <数字闭包> } } ; <函数块闭包> } # 
输入栈:digit , digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第167步
符号栈:<数字闭包> } } ; <函数块闭包> } # 
输入栈:, digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字闭包>->,<数字><数字闭包>

第168步
符号栈:, <数字> <数字闭包> } } ; <函数块闭包> } # 
输入栈:, digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第169步
符号栈:<数字> <数字闭包> } } ; <函数块闭包> } # 
输入栈:digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第170步
符号栈:digit <数字闭包> } } ; <函数块闭包> } # 
输入栈:digit } } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第171步
符号栈:<数字闭包> } } ; <函数块闭包> } # 
输入栈:} } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字闭包>->$

第172步
符号栈:} } ; <函数块闭包> } # 
输入栈:} } ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第173步
符号栈:} ; <函数块闭包> } # 
输入栈:} ; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第174步
符号栈:; <函数块闭包> } # 
输入栈:; if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第175步
符号栈:<函数块闭包> } # 
输入栈:if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<函数块闭包>-><条件语句><函数块闭包>

第176步
符号栈:<条件语句> <函数块闭包> } # 
输入栈:if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<条件语句>->if(<逻辑表达式>)<条件函数块><否则语句>

第177步
符号栈:if ( <逻辑表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:if ( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第178步
符号栈:( <逻辑表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:( id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第179步
符号栈:<逻辑表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<逻辑表达式>-><表达式><逻辑运算符><表达式>

第180步
符号栈:<表达式> <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<表达式>->id[<表达式>].id

第181步
符号栈:id [ <表达式> ] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:id [ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第182步
符号栈:[ <表达式> ] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:[ digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第183步
符号栈:<表达式> ] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<表达式>-><因子><项>

第184步
符号栈:<因子> <项> ] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因子>-><因式><因式递归>

第185步
符号栈:<因式> <因式递归> <项> ] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式>-><数字>

第186步
符号栈:<数字> <因式递归> <项> ] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第187步
符号栈:digit <因式递归> <项> ] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第188步
符号栈:<因式递归> <项> ] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式递归>->$

第189步
符号栈:<项> ] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<项>->$

第190步
符号栈:] . id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:] . id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第191步
符号栈:. id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:. id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第192步
符号栈:id <逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:id < digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第193步
符号栈:<逻辑运算符> <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:< digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<逻辑运算符>-><

第194步
符号栈:< <表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:< digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第195步
符号栈:<表达式> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<表达式>-><因子><项>

第196步
符号栈:<因子> <项> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因子>-><因式><因式递归>

第197步
符号栈:<因式> <因式递归> <项> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式>-><数字>

第198步
符号栈:<数字> <因式递归> <项> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第199步
符号栈:digit <因式递归> <项> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:digit ) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第200步
符号栈:<因式递归> <项> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式递归>->$

第201步
符号栈:<项> ) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:) id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<项>->$

第202步
符号栈:) <条件函数块> <否则语句> <函数块闭包> } # 
输入栈:) id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第203步
符号栈:<条件函数块> <否则语句> <函数块闭包> } # 
输入栈:id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<条件函数块>-><赋值函数>

第204步
符号栈:<赋值函数> <否则语句> <函数块闭包> } # 
输入栈:id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<赋值函数>-><变量><赋值或函数调用>

第205步
符号栈:<变量> <赋值或函数调用> <否则语句> <函数块闭包> } # 
输入栈:id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<变量>-><标志符><数组或结构体>

第206步
符号栈:<标志符> <数组或结构体> <赋值或函数调用> <否则语句> <函数块闭包> } # 
输入栈:id = digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<标志符>->id

第207步
符号栈:id <数组或结构体> <赋值或函数调用> <否则语句> <函数块闭包> } # 
输入栈:id = digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第208步
符号栈:<数组或结构体> <赋值或函数调用> <否则语句> <函数块闭包> } # 
输入栈:= digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组或结构体>-><数组下标>

第209步
符号栈:<数组下标> <赋值或函数调用> <否则语句> <函数块闭包> } # 
输入栈:= digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数组下标>->$

第210步
符号栈:<赋值或函数调用> <否则语句> <函数块闭包> } # 
输入栈:= digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<赋值或函数调用>->=<右值>;

第211步
符号栈:= <右值> ; <否则语句> <函数块闭包> } # 
输入栈:= digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第212步
符号栈:<右值> ; <否则语句> <函数块闭包> } # 
输入栈:digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<右值>-><表达式>

第213步
符号栈:<表达式> ; <否则语句> <函数块闭包> } # 
输入栈:digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<表达式>-><因子><项>

第214步
符号栈:<因子> <项> ; <否则语句> <函数块闭包> } # 
输入栈:digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因子>-><因式><因式递归>

第215步
符号栈:<因式> <因式递归> <项> ; <否则语句> <函数块闭包> } # 
输入栈:digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式>-><数字>

第216步
符号栈:<数字> <因式递归> <项> ; <否则语句> <函数块闭包> } # 
输入栈:digit ; else id = digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第217步
符号栈:digit <因式递归> <项> ; <否则语句> <函数块闭包> } # 
输入栈:digit ; else id = digit ; id ( string , id ) ; } # 
匹配!
第218步
符号栈:<因式递归> <项> ; <否则语句> <函数块闭包> } # 
输入栈:; else id = digit ; id ( string , id ) ; } # 
所用推出式：<因式递归>->$

第219步
符号栈:<项> ; <否则语句> <函数块闭包> } # 
输入栈:; else id = digit ; id ( string , id ) ; } # 
所用推出式：<项>->$

第220步
符号栈:; <否则语句> <函数块闭包> } # 
输入栈:; else id = digit ; id ( string , id ) ; } # 
匹配!
第221步
符号栈:<否则语句> <函数块闭包> } # 
输入栈:else id = digit ; id ( string , id ) ; } # 
所用推出式：<否则语句>->else<否则函数块>

第222步
符号栈:else <否则函数块> <函数块闭包> } # 
输入栈:else id = digit ; id ( string , id ) ; } # 
匹配!
第223步
符号栈:<否则函数块> <函数块闭包> } # 
输入栈:id = digit ; id ( string , id ) ; } # 
所用推出式：<否则函数块>-><赋值函数>

第224步
符号栈:<赋值函数> <函数块闭包> } # 
输入栈:id = digit ; id ( string , id ) ; } # 
所用推出式：<赋值函数>-><变量><赋值或函数调用>

第225步
符号栈:<变量> <赋值或函数调用> <函数块闭包> } # 
输入栈:id = digit ; id ( string , id ) ; } # 
所用推出式：<变量>-><标志符><数组或结构体>

第226步
符号栈:<标志符> <数组或结构体> <赋值或函数调用> <函数块闭包> } # 
输入栈:id = digit ; id ( string , id ) ; } # 
所用推出式：<标志符>->id

第227步
符号栈:id <数组或结构体> <赋值或函数调用> <函数块闭包> } # 
输入栈:id = digit ; id ( string , id ) ; } # 
匹配!
第228步
符号栈:<数组或结构体> <赋值或函数调用> <函数块闭包> } # 
输入栈:= digit ; id ( string , id ) ; } # 
所用推出式：<数组或结构体>-><数组下标>

第229步
符号栈:<数组下标> <赋值或函数调用> <函数块闭包> } # 
输入栈:= digit ; id ( string , id ) ; } # 
所用推出式：<数组下标>->$

第230步
符号栈:<赋值或函数调用> <函数块闭包> } # 
输入栈:= digit ; id ( string , id ) ; } # 
所用推出式：<赋值或函数调用>->=<右值>;

第231步
符号栈:= <右值> ; <函数块闭包> } # 
输入栈:= digit ; id ( string , id ) ; } # 
匹配!
第232步
符号栈:<右值> ; <函数块闭包> } # 
输入栈:digit ; id ( string , id ) ; } # 
所用推出式：<右值>-><表达式>

第233步
符号栈:<表达式> ; <函数块闭包> } # 
输入栈:digit ; id ( string , id ) ; } # 
所用推出式：<表达式>-><因子><项>

第234步
符号栈:<因子> <项> ; <函数块闭包> } # 
输入栈:digit ; id ( string , id ) ; } # 
所用推出式：<因子>-><因式><因式递归>

第235步
符号栈:<因式> <因式递归> <项> ; <函数块闭包> } # 
输入栈:digit ; id ( string , id ) ; } # 
所用推出式：<因式>-><数字>

第236步
符号栈:<数字> <因式递归> <项> ; <函数块闭包> } # 
输入栈:digit ; id ( string , id ) ; } # 
所用推出式：<数字>->digit

第237步
符号栈:digit <因式递归> <项> ; <函数块闭包> } # 
输入栈:digit ; id ( string , id ) ; } # 
匹配!
第238步
符号栈:<因式递归> <项> ; <函数块闭包> } # 
输入栈:; id ( string , id ) ; } # 
所用推出式：<因式递归>->$

第239步
符号栈:<项> ; <函数块闭包> } # 
输入栈:; id ( string , id ) ; } # 
所用推出式：<项>->$

第240步
符号栈:; <函数块闭包> } # 
输入栈:; id ( string , id ) ; } # 
匹配!
第241步
符号栈:<函数块闭包> } # 
输入栈:id ( string , id ) ; } # 
所用推出式：<函数块闭包>-><赋值函数><函数块闭包>

第242步
符号栈:<赋值函数> <函数块闭包> } # 
输入栈:id ( string , id ) ; } # 
所用推出式：<赋值函数>-><变量><赋值或函数调用>

第243步
符号栈:<变量> <赋值或函数调用> <函数块闭包> } # 
输入栈:id ( string , id ) ; } # 
所用推出式：<变量>-><标志符><数组或结构体>

第244步
符号栈:<标志符> <数组或结构体> <赋值或函数调用> <函数块闭包> } # 
输入栈:id ( string , id ) ; } # 
所用推出式：<标志符>->id

第245步
符号栈:id <数组或结构体> <赋值或函数调用> <函数块闭包> } # 
输入栈:id ( string , id ) ; } # 
匹配!
第246步
符号栈:<数组或结构体> <赋值或函数调用> <函数块闭包> } # 
输入栈:( string , id ) ; } # 
所用推出式：<数组或结构体>-><数组下标>

第247步
符号栈:<数组下标> <赋值或函数调用> <函数块闭包> } # 
输入栈:( string , id ) ; } # 
所用推出式：<数组下标>->$

第248步
符号栈:<赋值或函数调用> <函数块闭包> } # 
输入栈:( string , id ) ; } # 
所用推出式：<赋值或函数调用>->(<参数列表>);

第249步
符号栈:( <参数列表> ) ; <函数块闭包> } # 
输入栈:( string , id ) ; } # 
匹配!
第250步
符号栈:<参数列表> ) ; <函数块闭包> } # 
输入栈:string , id ) ; } # 
所用推出式：<参数列表>-><参数><参数闭包>

第251步
符号栈:<参数> <参数闭包> ) ; <函数块闭包> } # 
输入栈:string , id ) ; } # 
所用推出式：<参数>-><字符串>

第252步
符号栈:<字符串> <参数闭包> ) ; <函数块闭包> } # 
输入栈:string , id ) ; } # 
所用推出式：<字符串>->string

第253步
符号栈:string <参数闭包> ) ; <函数块闭包> } # 
输入栈:string , id ) ; } # 
匹配!
第254步
符号栈:<参数闭包> ) ; <函数块闭包> } # 
输入栈:, id ) ; } # 
所用推出式：<参数闭包>->,<参数><参数闭包>

第255步
符号栈:, <参数> <参数闭包> ) ; <函数块闭包> } # 
输入栈:, id ) ; } # 
匹配!
第256步
符号栈:<参数> <参数闭包> ) ; <函数块闭包> } # 
输入栈:id ) ; } # 
所用推出式：<参数>-><标志符>

第257步
符号栈:<标志符> <参数闭包> ) ; <函数块闭包> } # 
输入栈:id ) ; } # 
所用推出式：<标志符>->id

第258步
符号栈:id <参数闭包> ) ; <函数块闭包> } # 
输入栈:id ) ; } # 
匹配!
第259步
符号栈:<参数闭包> ) ; <函数块闭包> } # 
输入栈:) ; } # 
所用推出式：<参数闭包>->$

第260步
符号栈:) ; <函数块闭包> } # 
输入栈:) ; } # 
匹配!
第261步
符号栈:; <函数块闭包> } # 
输入栈:; } # 
匹配!
第262步
符号栈:<函数块闭包> } # 
输入栈:} # 
所用推出式：<函数块闭包>->$

第263步
符号栈:} # 
输入栈:} # 
匹配!
第264步
符号栈:# 
输入栈:# 
成功!
